// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: cln_plugin.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HtlcAccepted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Correlationid string `protobuf:"bytes,1,opt,name=correlationid,proto3" json:"correlationid,omitempty"`
	Onion         *Onion `protobuf:"bytes,2,opt,name=onion,proto3" json:"onion,omitempty"`
	Htlc          *Htlc  `protobuf:"bytes,3,opt,name=htlc,proto3" json:"htlc,omitempty"`
	ForwardTo     string `protobuf:"bytes,4,opt,name=forward_to,json=forwardTo,proto3" json:"forward_to,omitempty"`
}

func (x *HtlcAccepted) Reset() {
	*x = HtlcAccepted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtlcAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtlcAccepted) ProtoMessage() {}

func (x *HtlcAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtlcAccepted.ProtoReflect.Descriptor instead.
func (*HtlcAccepted) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *HtlcAccepted) GetCorrelationid() string {
	if x != nil {
		return x.Correlationid
	}
	return ""
}

func (x *HtlcAccepted) GetOnion() *Onion {
	if x != nil {
		return x.Onion
	}
	return nil
}

func (x *HtlcAccepted) GetHtlc() *Htlc {
	if x != nil {
		return x.Htlc
	}
	return nil
}

func (x *HtlcAccepted) GetForwardTo() string {
	if x != nil {
		return x.ForwardTo
	}
	return ""
}

type Onion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload           string `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	ShortChannelId    string `protobuf:"bytes,2,opt,name=short_channel_id,json=shortChannelId,proto3" json:"short_channel_id,omitempty"`
	ForwardMsat       uint64 `protobuf:"varint,3,opt,name=forward_msat,json=forwardMsat,proto3" json:"forward_msat,omitempty"`
	OutgoingCltvValue uint32 `protobuf:"varint,4,opt,name=outgoing_cltv_value,json=outgoingCltvValue,proto3" json:"outgoing_cltv_value,omitempty"`
	SharedSecret      string `protobuf:"bytes,5,opt,name=shared_secret,json=sharedSecret,proto3" json:"shared_secret,omitempty"`
	NextOnion         string `protobuf:"bytes,6,opt,name=next_onion,json=nextOnion,proto3" json:"next_onion,omitempty"`
}

func (x *Onion) Reset() {
	*x = Onion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Onion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Onion) ProtoMessage() {}

func (x *Onion) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Onion.ProtoReflect.Descriptor instead.
func (*Onion) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *Onion) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Onion) GetShortChannelId() string {
	if x != nil {
		return x.ShortChannelId
	}
	return ""
}

func (x *Onion) GetForwardMsat() uint64 {
	if x != nil {
		return x.ForwardMsat
	}
	return 0
}

func (x *Onion) GetOutgoingCltvValue() uint32 {
	if x != nil {
		return x.OutgoingCltvValue
	}
	return 0
}

func (x *Onion) GetSharedSecret() string {
	if x != nil {
		return x.SharedSecret
	}
	return ""
}

func (x *Onion) GetNextOnion() string {
	if x != nil {
		return x.NextOnion
	}
	return ""
}

type Htlc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortChannelId     string `protobuf:"bytes,1,opt,name=short_channel_id,json=shortChannelId,proto3" json:"short_channel_id,omitempty"`
	Id                 uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AmountMsat         uint64 `protobuf:"varint,3,opt,name=amount_msat,json=amountMsat,proto3" json:"amount_msat,omitempty"`
	CltvExpiry         uint32 `protobuf:"varint,4,opt,name=cltv_expiry,json=cltvExpiry,proto3" json:"cltv_expiry,omitempty"`
	CltvExpiryRelative uint32 `protobuf:"varint,5,opt,name=cltv_expiry_relative,json=cltvExpiryRelative,proto3" json:"cltv_expiry_relative,omitempty"`
	PaymentHash        string `protobuf:"bytes,6,opt,name=payment_hash,json=paymentHash,proto3" json:"payment_hash,omitempty"`
}

func (x *Htlc) Reset() {
	*x = Htlc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Htlc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Htlc) ProtoMessage() {}

func (x *Htlc) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Htlc.ProtoReflect.Descriptor instead.
func (*Htlc) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *Htlc) GetShortChannelId() string {
	if x != nil {
		return x.ShortChannelId
	}
	return ""
}

func (x *Htlc) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Htlc) GetAmountMsat() uint64 {
	if x != nil {
		return x.AmountMsat
	}
	return 0
}

func (x *Htlc) GetCltvExpiry() uint32 {
	if x != nil {
		return x.CltvExpiry
	}
	return 0
}

func (x *Htlc) GetCltvExpiryRelative() uint32 {
	if x != nil {
		return x.CltvExpiryRelative
	}
	return 0
}

func (x *Htlc) GetPaymentHash() string {
	if x != nil {
		return x.PaymentHash
	}
	return ""
}

type HtlcResolution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Correlationid string `protobuf:"bytes,1,opt,name=correlationid,proto3" json:"correlationid,omitempty"`
	// Types that are assignable to Outcome:
	//	*HtlcResolution_Fail
	//	*HtlcResolution_Continue
	//	*HtlcResolution_Resolve
	Outcome isHtlcResolution_Outcome `protobuf_oneof:"outcome"`
}

func (x *HtlcResolution) Reset() {
	*x = HtlcResolution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtlcResolution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtlcResolution) ProtoMessage() {}

func (x *HtlcResolution) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtlcResolution.ProtoReflect.Descriptor instead.
func (*HtlcResolution) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *HtlcResolution) GetCorrelationid() string {
	if x != nil {
		return x.Correlationid
	}
	return ""
}

func (m *HtlcResolution) GetOutcome() isHtlcResolution_Outcome {
	if m != nil {
		return m.Outcome
	}
	return nil
}

func (x *HtlcResolution) GetFail() *HtlcFail {
	if x, ok := x.GetOutcome().(*HtlcResolution_Fail); ok {
		return x.Fail
	}
	return nil
}

func (x *HtlcResolution) GetContinue() *HtlcContinue {
	if x, ok := x.GetOutcome().(*HtlcResolution_Continue); ok {
		return x.Continue
	}
	return nil
}

func (x *HtlcResolution) GetResolve() *HtlcResolve {
	if x, ok := x.GetOutcome().(*HtlcResolution_Resolve); ok {
		return x.Resolve
	}
	return nil
}

type isHtlcResolution_Outcome interface {
	isHtlcResolution_Outcome()
}

type HtlcResolution_Fail struct {
	Fail *HtlcFail `protobuf:"bytes,2,opt,name=fail,proto3,oneof"`
}

type HtlcResolution_Continue struct {
	Continue *HtlcContinue `protobuf:"bytes,3,opt,name=continue,proto3,oneof"`
}

type HtlcResolution_Resolve struct {
	Resolve *HtlcResolve `protobuf:"bytes,4,opt,name=resolve,proto3,oneof"`
}

func (*HtlcResolution_Fail) isHtlcResolution_Outcome() {}

func (*HtlcResolution_Continue) isHtlcResolution_Outcome() {}

func (*HtlcResolution_Resolve) isHtlcResolution_Outcome() {}

type HtlcContinue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload   *string `protobuf:"bytes,1,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
	ForwardTo *string `protobuf:"bytes,2,opt,name=forward_to,json=forwardTo,proto3,oneof" json:"forward_to,omitempty"`
}

func (x *HtlcContinue) Reset() {
	*x = HtlcContinue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtlcContinue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtlcContinue) ProtoMessage() {}

func (x *HtlcContinue) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtlcContinue.ProtoReflect.Descriptor instead.
func (*HtlcContinue) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *HtlcContinue) GetPayload() string {
	if x != nil && x.Payload != nil {
		return *x.Payload
	}
	return ""
}

func (x *HtlcContinue) GetForwardTo() string {
	if x != nil && x.ForwardTo != nil {
		return *x.ForwardTo
	}
	return ""
}

type HtlcFail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Failure:
	//	*HtlcFail_FailureMessage
	//	*HtlcFail_FailureOnion
	Failure isHtlcFail_Failure `protobuf_oneof:"failure"`
}

func (x *HtlcFail) Reset() {
	*x = HtlcFail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtlcFail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtlcFail) ProtoMessage() {}

func (x *HtlcFail) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtlcFail.ProtoReflect.Descriptor instead.
func (*HtlcFail) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{5}
}

func (m *HtlcFail) GetFailure() isHtlcFail_Failure {
	if m != nil {
		return m.Failure
	}
	return nil
}

func (x *HtlcFail) GetFailureMessage() string {
	if x, ok := x.GetFailure().(*HtlcFail_FailureMessage); ok {
		return x.FailureMessage
	}
	return ""
}

func (x *HtlcFail) GetFailureOnion() string {
	if x, ok := x.GetFailure().(*HtlcFail_FailureOnion); ok {
		return x.FailureOnion
	}
	return ""
}

type isHtlcFail_Failure interface {
	isHtlcFail_Failure()
}

type HtlcFail_FailureMessage struct {
	FailureMessage string `protobuf:"bytes,1,opt,name=failure_message,json=failureMessage,proto3,oneof"`
}

type HtlcFail_FailureOnion struct {
	FailureOnion string `protobuf:"bytes,2,opt,name=failure_onion,json=failureOnion,proto3,oneof"`
}

func (*HtlcFail_FailureMessage) isHtlcFail_Failure() {}

func (*HtlcFail_FailureOnion) isHtlcFail_Failure() {}

type HtlcResolve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentKey string `protobuf:"bytes,1,opt,name=payment_key,json=paymentKey,proto3" json:"payment_key,omitempty"`
}

func (x *HtlcResolve) Reset() {
	*x = HtlcResolve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HtlcResolve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HtlcResolve) ProtoMessage() {}

func (x *HtlcResolve) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HtlcResolve.ProtoReflect.Descriptor instead.
func (*HtlcResolve) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *HtlcResolve) GetPaymentKey() string {
	if x != nil {
		return x.PaymentKey
	}
	return ""
}

type CustomMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CustomMessageRequest) Reset() {
	*x = CustomMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomMessageRequest) ProtoMessage() {}

func (x *CustomMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomMessageRequest.ProtoReflect.Descriptor instead.
func (*CustomMessageRequest) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{7}
}

type CustomMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId  string `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CustomMessage) Reset() {
	*x = CustomMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cln_plugin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomMessage) ProtoMessage() {}

func (x *CustomMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cln_plugin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomMessage.ProtoReflect.Descriptor instead.
func (*CustomMessage) Descriptor() ([]byte, []int) {
	return file_cln_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *CustomMessage) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *CustomMessage) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

var File_cln_plugin_proto protoreflect.FileDescriptor

var file_cln_plugin_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x6c, 0x6e, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x48, 0x74, 0x6c, 0x63, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x6f, 0x6e, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x6e, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x6f, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x04, 0x68, 0x74, 0x6c, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48, 0x74, 0x6c, 0x63, 0x52, 0x04, 0x68, 0x74,
	0x6c, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54,
	0x6f, 0x22, 0xe2, 0x01, 0x0a, 0x05, 0x4f, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x73, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73,
	0x61, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6c, 0x74, 0x76, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x74, 0x76, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x6f, 0x6e, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x4f, 0x6e, 0x69, 0x6f, 0x6e, 0x22, 0xd7, 0x01, 0x0a, 0x04, 0x48, 0x74, 0x6c, 0x63, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x73, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c,
	0x74, 0x76, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x6c, 0x74, 0x76, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x63,
	0x6c, 0x74, 0x76, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x63, 0x6c, 0x74, 0x76, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x22, 0xb9, 0x01, 0x0a, 0x0e, 0x48, 0x74, 0x6c, 0x63, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x66, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x48, 0x74, 0x6c, 0x63, 0x46, 0x61,
	0x69, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x48,
	0x74, 0x6c, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x48, 0x74, 0x6c, 0x63, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x0c,
	0x48, 0x74, 0x6c, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x22, 0x67, 0x0a, 0x08, 0x48, 0x74,
	0x6c, 0x63, 0x46, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x25, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x6f, 0x6e, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x4f, 0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x22, 0x2e, 0x0a, 0x0b, 0x48, 0x74, 0x6c, 0x63, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x0d, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32,
	0x79, 0x0a, 0x09, 0x43, 0x6c, 0x6e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x30, 0x0a, 0x0a,
	0x48, 0x74, 0x6c, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0f, 0x2e, 0x48, 0x74, 0x6c,
	0x63, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x48, 0x74,
	0x6c, 0x63, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3a,
	0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x15, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x65, 0x65, 0x7a, 0x2f, 0x6c,
	0x73, 0x70, 0x64, 0x2f, 0x63, 0x6c, 0x6e, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cln_plugin_proto_rawDescOnce sync.Once
	file_cln_plugin_proto_rawDescData = file_cln_plugin_proto_rawDesc
)

func file_cln_plugin_proto_rawDescGZIP() []byte {
	file_cln_plugin_proto_rawDescOnce.Do(func() {
		file_cln_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_cln_plugin_proto_rawDescData)
	})
	return file_cln_plugin_proto_rawDescData
}

var file_cln_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_cln_plugin_proto_goTypes = []interface{}{
	(*HtlcAccepted)(nil),         // 0: HtlcAccepted
	(*Onion)(nil),                // 1: Onion
	(*Htlc)(nil),                 // 2: Htlc
	(*HtlcResolution)(nil),       // 3: HtlcResolution
	(*HtlcContinue)(nil),         // 4: HtlcContinue
	(*HtlcFail)(nil),             // 5: HtlcFail
	(*HtlcResolve)(nil),          // 6: HtlcResolve
	(*CustomMessageRequest)(nil), // 7: CustomMessageRequest
	(*CustomMessage)(nil),        // 8: CustomMessage
}
var file_cln_plugin_proto_depIdxs = []int32{
	1, // 0: HtlcAccepted.onion:type_name -> Onion
	2, // 1: HtlcAccepted.htlc:type_name -> Htlc
	5, // 2: HtlcResolution.fail:type_name -> HtlcFail
	4, // 3: HtlcResolution.continue:type_name -> HtlcContinue
	6, // 4: HtlcResolution.resolve:type_name -> HtlcResolve
	3, // 5: ClnPlugin.HtlcStream:input_type -> HtlcResolution
	7, // 6: ClnPlugin.CustomMsgStream:input_type -> CustomMessageRequest
	0, // 7: ClnPlugin.HtlcStream:output_type -> HtlcAccepted
	8, // 8: ClnPlugin.CustomMsgStream:output_type -> CustomMessage
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_cln_plugin_proto_init() }
func file_cln_plugin_proto_init() {
	if File_cln_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cln_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtlcAccepted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Onion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Htlc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtlcResolution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtlcContinue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtlcFail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HtlcResolve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cln_plugin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cln_plugin_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*HtlcResolution_Fail)(nil),
		(*HtlcResolution_Continue)(nil),
		(*HtlcResolution_Resolve)(nil),
	}
	file_cln_plugin_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_cln_plugin_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*HtlcFail_FailureMessage)(nil),
		(*HtlcFail_FailureOnion)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cln_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cln_plugin_proto_goTypes,
		DependencyIndexes: file_cln_plugin_proto_depIdxs,
		MessageInfos:      file_cln_plugin_proto_msgTypes,
	}.Build()
	File_cln_plugin_proto = out.File
	file_cln_plugin_proto_rawDesc = nil
	file_cln_plugin_proto_goTypes = nil
	file_cln_plugin_proto_depIdxs = nil
}
